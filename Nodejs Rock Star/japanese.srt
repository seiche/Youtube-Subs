1
00:00:00,100 --> 00:00:06,000
それで私たちのウェブアプリケーションに関してはApacheは最適だと結論した。

2
00:00:06,100 --> 00:00:07,200
質問はありますか？

3
00:00:08,000 --> 00:00:12,400
はい、質問があります。なぜNodejsを使わなかったでしょうか？

4
00:00:12,500 --> 00:00:19,200
Nodejsとはハイパフォーマンスウェブアプリケーションの作れるイベントドリブン・ノンブロッキングIOサーバ。

5
00:00:19,800 --> 00:00:21,000
それはいい質問です。

6
00:00:21,100 --> 00:00:28,500
いくつかのサーバを検討したうえ、Nodejsみたいな選択は非常に面白い方法でありながら

7
00:00:28,700 --> 00:00:31,700
私たちの使用においてはApacheが有効でなおかつ安定していると判断しました。

8
00:00:31,800 --> 00:00:33,600
けどパフォーマンスはありません。

9
00:00:33,700 --> 00:00:40,200
ApacheはブロッキングIOとコンテキストスイッチを利用しているため、アプリケーションが遅くなるのは皆がわかり切っていることです。

10
00:00:40,300 --> 00:00:47,360
スレッドのウェブサーバがなんとなくイベント系のサーバより遅いとはよく思われいているけど、

11
00:00:47,400 --> 00:00:53,300
よく測ってみれば両方とも同じパフォーマンスの特徴を持っているいることが分かるはずです。

12
00:00:53,600 --> 00:00:55,500
スレッドはスケールしない、それだけだ。

13
00:00:56,000 --> 00:00:59,500
十年前ならそれはありうるだったかもしれないけど、現代はそうでない。

14
00:01:00,000 --> 00:01:06,300
Apacheは非同期が発見される前に作られたため、Nodejsの方が確実に早い。

15
00:01:07,900 --> 00:01:14,000
ここまで話を聞くとあなたの声が聞こえなくなるまで、耳をフォークで刺したくなるところだね。

16
00:01:14,100 --> 00:01:20,100
Nodeを吟味した、シングルスレッドのイベントループを利用してイベントをハンドラ―にディスパッチしている

17
00:01:20,200 --> 00:01:25,700
同期並行性問題に対しての対策なんだけど、コードが複雑になる。

18
00:01:26,000 --> 00:01:30,800
俺みたいなオタクにサーバのCPUサイクルを最後まで使い切るコントロールを与えてくれている

19
00:01:31,000 --> 00:01:36,200
完全にアプリケーションのパフォーマンスの責任を負うのが気持ちいいでしょうか？

20
00:01:36,400 --> 00:01:41,100
小さな部分に分解しなければいけないブロッキング・オペレーションをいつも見張ってなければいけない

21
00:01:41,200 --> 00:01:44,650
一個づつ同期的スループットを最適化して

22
00:01:44,720 --> 00:01:48,500
アセンブラーの複雑さにJavascriptの効率部分を引っ付けたようなもんだ。

23
00:01:48,600 --> 00:01:50,900
スピーディになりさえなれば

24
00:01:51,000 --> 00:01:53,500
これで何が思い浮かぶか分かる？

25
00:01:54,000 --> 00:01:55,400
トランジスタの発明？

26
00:01:55,500 --> 00:01:58,600
スレッドの発明を思い浮かぶのさ。

27
00:01:58,800 --> 00:02:02,200
スレッドのライブラリは今手動でやっているのをその通りやるのさ

28
00:02:02,300 --> 00:02:05,150
断続全的に実行するコードを分解して、

29
00:02:05,250 --> 00:02:10,300
IOを待っている指示から実行可能の指示を切り替えてくれるんだ

30
00:02:10,400 --> 00:02:16,400
けど同期コードはそのまま。同期とは特に呼ぶまでもなく、読めるコードを

31
00:02:16,500 --> 00:02:18,200
けどカメほど遅いじゃ

32
00:02:18,600 --> 00:02:23,700
あなたの非同期プログラムは19世紀からのゴシックホラーストリからのものみたい。

33
00:02:23,800 --> 00:02:29,000
時分の力で酔って、以前に明確であったコードを組みこみなおして

34
00:02:29,060 --> 00:02:32,420
イベントループとコールバックで縫い付けって

35
00:02:32,520 --> 00:02:38,200
あなたの異様な恐ろしいモンスターがJavascriptVMで生活をもたらす準備ができると

36
00:02:38,300 --> 00:02:43,100
あなたがスイッチを入れ、するとお前の作った化け物が目覚め、近づいてくる。

37
00:02:43,200 --> 00:02:48,160
そしてここまで非自然的なものが動くと同時に恐怖と喜びの気持ちを体験しているうちに

38
00:02:48,260 --> 00:02:52,240
自分がどこまで不道徳なことをやったかと気づいたときに

39
00:02:52,340 --> 00:02:56,600
あなたの作った化け物は血だらけついた腕を伸ばして首を絞めつける。

40
00:02:58,100 --> 00:02:59,800
早ければいいや。

41
00:03:00,000 --> 00:03:06,200
パフォーマンスの割に複雑のコードが痛くも痒くなければＮｇｉｎｘのモジュールをCで書いたら？

42
00:03:06,800 --> 00:03:11,900
「Ruby on Rails」が出てからNodejsが一番イケたロックスターテックだ

43
00:03:12,000 --> 00:03:16,200
人間の進化を楽しみにした者だけ、あなたみたいな人にであうと

44
00:03:16,300 --> 00:03:18,800
それができなくなるのさ

45
00:03:18,900 --> 00:03:22,000
あなたはテクノロジー・ファッション教会の一員だ。

46
00:03:22,100 --> 00:03:28,900
あなたが非同期に対する考え方はなぜ完全に間違えているかの証拠をいくら出して意味がない。

47
00:03:29,000 --> 00:03:32,300
だってお前がテクノロジーをロックのバンドに例えて、

48
00:03:32,330 --> 00:03:38,200
そしてNodejsのＴシャットを着て気持ち悪いコードも盛り上げるソフトウェアヒップスターとおもっているよね。

49
00:03:38,300 --> 00:03:42,100
お前は格好よかったかもしれない。あなたを仰いでいる人もいるかもしれない。

50
00:03:42,200 --> 00:03:45,400
けどあなたが自分の言っていることを理解しているとは全くもって考えられない。

51
00:03:45,500 --> 00:03:50,300
オウムみたいに「ノン・ブロッキング」を言い続けるのがあなたの理解の限界なのさ。

52
00:03:50,800 --> 00:03:57,700
ノンブロッキングは非同期ソースの秘密材料。あると早い、ないと遅い。

53
00:03:58,000 --> 00:04:01,200
人類は地球が丸いと発見したのがいつかか分かる？

54
00:04:01,500 --> 00:04:04,800
1492, コロンブスは海の青を航海した

55
00:04:04,900 --> 00:04:10,100
エラトステネスというギリシャの学者が240年ＢＣ発見したんだ。

56
00:04:10,200 --> 00:04:15,100
彼は影と市から市の距離を利用した単純な実験を行うことで

57
00:04:15,200 --> 00:04:19,700
地球が丸いこと証明しただけでなく円周まで計算することができた。

58
00:04:19,800 --> 00:04:21,500
ローテックのようだ。

59
00:04:21,600 --> 00:04:23,160
非常に素晴らしだった。

60
00:04:23,260 --> 00:04:28,700
けどなぜか一千年半地球は平だとは常識であった。

61
00:04:28,800 --> 00:04:31,900
何百年の一般無知。

62
00:04:32,000 --> 00:04:34,800
なぜこんなことが起こったんのだろうか？

63
00:04:36,650 --> 00:04:37,800
お前のようなやつのせいだった。

64
00:04:37,900 --> 00:04:41,400
お前が測らずにスレッドのパフォーマンスを主張するから。

65
00:04:41,500 --> 00:04:45,850
お前が自分のコードをマチェッテでハックして裏返して

66
00:04:45,900 --> 00:04:49,800
認識できない形にするとなぜか早くなると思っているから。

67
00:04:49,900 --> 00:04:57,200
お前が既に解決している問題と存在しない問題を切り替えて時間を費やすから。

68
00:04:57,300 --> 00:05:00,800
科学が一千年遅れたのがお前のせいだった。

69
00:05:00,900 --> 00:05:03,300
癌の治療を発見しない理由、

70
00:05:03,400 --> 00:05:06,120
世界の飢餓を解決していない理由

71
00:05:06,800 --> 00:05:11,700
お前みたいなマザー・ファッカーがいるせいで今我々はLispを使っていないのも

72
00:05:11,800 --> 00:05:14,700
最後の部分はなんでしたっけ？

73
00:05:14,800 --> 00:05:15,400
いや何も

74
00:05:15,450 --> 00:05:16,750
今「Lisp」と言ってなかった？

75
00:05:16,800 --> 00:05:17,800
聞き間違え

76
00:05:17,850 --> 00:05:19,450
今は絶対「Lisp」と聞こえた

77
00:05:19,550 --> 00:05:23,200
では以上質問がなければプレゼンを終了する

